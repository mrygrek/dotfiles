autoload zkbd

ZKBD_DIR=$HOME/.config/zsh/zkbd

function zkbd_file() {
    [[ -f $ZKBD_DIR/${TERM}-${VENDOR}-${OSTYPE} ]] && printf '%s' "$ZKBD_DIR/${TERM}-${VENDOR}-${OSTYPE}" && return 0
    [[ -f $ZKBD_DIR/${TERM}-${DISPLAY}          ]] && printf '%s' "$ZKBD_DIR/${TERM}-${DISPLAY}"          && return 0
    return 1
}

[[ ! -d $ZKBD_DIR ]] && mkdir $ZKBD_DIR
keyfile=$(zkbd_file)
ret=$?
if [[ ${ret} -ne 0 ]]; then
    zkbd
    keyfile=$(zkbd_file)
    ret=$?
fi
if [[ ${ret} -eq 0 ]] ; then
    source "${keyfile}"
else
    printf 'Failed to setup keys using zkbd.\n'
fi
unfunction zkbd_file; unset keyfile ret

# setup key accordingly
[[ -n "${key[Home]}"     ]]  && bindkey  "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]]  && bindkey  "${key[End]}"      end-of-line
[[ -n "${key[Insert]}"   ]]  && bindkey  "${key[Insert]}"   overwrite-mode
[[ -n "${key[Delete]}"   ]]  && bindkey  "${key[Delete]}"   delete-char
[[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"   up-line-or-history
[[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}" down-line-or-history
[[ -n "${key[Up]}"       ]]  && bindkey  "${key[Up]}"       up-line-or-search
[[ -n "${key[Down]}"     ]]  && bindkey  "${key[Down]}"     down-line-or-search
[[ -n "${key[Left]}"     ]]  && bindkey  "${key[Left]}"     backward-char
[[ -n "${key[Right]}"    ]]  && bindkey  "${key[Right]}"    forward-char
